{"version":3,"sources":["../../../src/use-cases/users/updateUser.ts"],"sourcesContent":["import { IUser, User } from '@/models/User'\n\nimport { error } from 'elysia'\n\nexport const updateUserService = async (id: string, { email, password }: IUser) => {\n  const user = await User.findById(id)\n\n  if (!user) {\n    throw error('Not Found', 'User not found')\n  }\n\n  if (email) {\n    const existingUser = await User.findOne({ email })\n\n    const isDifferentUser = existingUser?.id !== id\n\n    if (isDifferentUser) {\n      throw error('Conflict', 'User of this email already exists')\n    }\n\n    user.email = email\n  }\n\n  if (password) {\n    user.password = password\n  }\n\n  await user?.save().catch(() => {\n    throw error('Internal Server Error', 'Failed to update user')\n  })\n\n  return user\n}\n"],"names":["updateUserService","id","email","password","user","User","findById","error","existingUser","findOne","isDifferentUser","save","catch"],"mappings":";;;;+BAIaA;;;eAAAA;;;sBAJe;wBAEN;AAEf,MAAMA,oBAAoB,OAAOC,IAAY,EAAEC,KAAK,EAAEC,QAAQ,EAAS;IAC5E,MAAMC,OAAO,MAAMC,UAAI,CAACC,QAAQ,CAACL;IAEjC,IAAI,CAACG,MAAM;QACT,MAAMG,IAAAA,aAAK,EAAC,aAAa;IAC3B;IAEA,IAAIL,OAAO;QACT,MAAMM,eAAe,MAAMH,UAAI,CAACI,OAAO,CAAC;YAAEP;QAAM;QAEhD,MAAMQ,kBAAkBF,cAAcP,OAAOA;QAE7C,IAAIS,iBAAiB;YACnB,MAAMH,IAAAA,aAAK,EAAC,YAAY;QAC1B;QAEAH,KAAKF,KAAK,GAAGA;IACf;IAEA,IAAIC,UAAU;QACZC,KAAKD,QAAQ,GAAGA;IAClB;IAEA,MAAMC,MAAMO,OAAOC,MAAM;QACvB,MAAML,IAAAA,aAAK,EAAC,yBAAyB;IACvC;IAEA,OAAOH;AACT"}